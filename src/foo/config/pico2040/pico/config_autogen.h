/*
 * Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

// ---------------------------------------
// THIS FILE IS AUTOGENERATED; DO NOT EDIT
//
// This file is created from version.h.in - by hand for now but automate with Python, not cmake
// ---------------------------------------

#ifndef _PICO_CONFIG_AUTOGEN_H
#define _PICO_CONFIG_AUTOGEN_H

#ifdef __ASSEMBLER__
#else
// NOTE: THis is all in /home/adaptabuild/projects/adaptabuild-example/src/pico-sdk/src/rp2_common/pico_platform/include/pico/platform.h
#ifndef __printflike
#define __printflike(a, b)
#endif

#define __unused __attribute__ ((unused))
#define __aligned(x) __attribute__ ((aligned (x)))
#define __packed __attribute__ ((packed))

/* This define is also used outside of Newlib, e.g. in MinGW-w64 */
#ifndef _TIMEVAL_DEFINED
#define _TIMEVAL_DEFINED

#define CLOCKS_PER_SEC (1000000)

// Some of these time related defs should go to <types.h> and be re-included here

typedef int pid_t;

typedef long unsigned int clock_t;		   /* unit for system accounting */

/*
 * Structure returned by gettimeofday(2) system call, and used in other calls.
 */
typedef	long long int time_t;
typedef	long int suseconds_t;

struct timeval {
	time_t		tv_sec;		/* seconds */
	suseconds_t	tv_usec;	/* and microseconds */
};

// typedef	unsigned long suseconds_t;

/*  Get Process Times, P1003.1b-1993, p. 92 */
struct tms {
	clock_t	tms_utime;		/* user time */
	clock_t	tms_stime;		/* system time */
	clock_t	tms_cutime;		/* user time, children */
	clock_t	tms_cstime;		/* system time, children */
};

struct timezone {
	int	tz_minuteswest;	/* minutes west of Greenwich */
	int	tz_dsttime;	/* type of dst correction */
};

#endif /* _TIMEVAL_DEFINED */

#endif
// #define PICO_SDK_VERSION_MAJOR    1
// #define PICO_SDK_VERSION_MINOR    5
// #define PICO_SDK_VERSION_REVISION 1
// #define PICO_SDK_VERSION_STRING   "pico-sdk 1.5.1"

#endif